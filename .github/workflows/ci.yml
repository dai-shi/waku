name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test on (Node ${{ matrix.version }})
    strategy:
      fail-fast: false
      matrix:
        version: [18.17.0, 20.8.0, 22.7.0]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.version }}
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'
      - run: pnpm install --frozen-lockfile
      - run: pnpm test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'
      - run: pnpm install --frozen-lockfile
      - run: pnpm run compile
      - uses: actions/upload-artifact@v4
        with:
          name: create-waku
          path: |
            packages/create-waku
            !packages/create-waku/node_modules
          if-no-files-found: error
      - uses: actions/upload-artifact@v4
        with:
          name: waku
          path: |
            packages/waku
            !packages/waku/node_modules
          if-no-files-found: error

  e2e:
    name: E2E on ${{ matrix.os }} (Node ${{ matrix.version }}) - (${{ matrix.shared }}/4)
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        shared: [1, 2, 3, 4]
        shardTotal: [4]
        os: [ubuntu-latest, windows-latest, macos-latest]
        version: [18.17.0, 20.8.0, 22.7.0]
        exclude:
          - os: macos-latest
            version: 18.17.0
          - os: macos-latest
            version: 20.8.0
          - os: windows-latest
            version: 18.17.0
          - os: windows-latest
            version: 20.8.0

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.version }}
          cache: 'pnpm'
          cache-dependency-path: '**/pnpm-lock.yaml'
      - run: pnpm install --frozen-lockfile
      - uses: actions/download-artifact@v4
        with:
          name: create-waku
          path: packages/create-waku
      - uses: actions/download-artifact@v4
        with:
          name: waku
          path: packages/waku
      - name: Install Playwright
        id: install-playwright
        uses: ./.github/actions/playwright
      - run: pnpm exec playwright test --shard=${{ matrix.shared }}/${{ matrix.shardTotal }}
        env:
          TEMP_DIR: ${{ runner.temp }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-${{ matrix.os }}-${{ matrix.version }}-${{ matrix.shared }}
          path: test-results/
          retention-days: 30
          if-no-files-found: ignore
